#!/bin/bash

# Copyright (C) 2023 Petr Pacner 
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street,
# Fifth Floor, Boston, MA  02110-1301, USA.
#
# You can dowload a copy of the GNU General Public License here:
# http://www.gnu.org/licenses/gpl.txt
#
# Author: Petr Pacner 
# Email: petr.pacner@cern.ch
#
# NOTE the name of the driver is passed as an argument to the script
# so that it can be easily modified in the makefile


DESTINATION=$1
FILE=$2

if [ -z $DESTINATION ]; then
    DESTINATION=$PWD
fi

OLD_VERSION=$(cat $FILE)
OLD_COMPRESSED=$(echo $OLD_VERSION | sed 's/\([0-9]\+\)\.\([0-9]\)\.\([0-9]\).*/\1\2\3/g')
SUFFIX=$(echo $OLD_VERSION | sed 's/[0-9\.]\+-\(.*\)/\1/g')

# the 10 means that we expect 10 based value
NEW_COMPRESSED=$((10#$OLD_COMPRESSED + 1))
NUM_OF_DIGITS=${#OLD_COMPRESSED}
FIRST_DOT=$((10#$NUM_OF_DIGITS - 2))

# THIS IS NEEDED BECAUSE WE WANT TO SKIP THE 
# SECOND VALUE SO WE HAVE TO JUMP ABOUT 2 DIGITS
FIRST_DOT_SV=$((10#$NUM_OF_DIGITS - 1))

NEW_COMPRESSED_ALIGN=$(printf "%0${NUM_OF_DIGITS}d" $NEW_COMPRESSED)
NEW_VERSION=$(echo $NEW_COMPRESSED_ALIGN | sed "s/\([0-9]\)/\1./${FIRST_DOT}g;s/.$/-$SUFFIX/")
SV_VERSION=$(echo $NEW_COMPRESSED_ALIGN | sed "s/\([0-9]\)/0\1/${FIRST_DOT_SV}g")
printf '\e[1;34m[INF]\e[0m increasing the version of the driver from %s -> %s\n' $OLD_VERSION $NEW_VERSION
echo $NEW_VERSION > $FILE

# THIS DOES THE 32bit ALIGNMENT, SO IT ADDS THE 
# ZEROS AT THE BIGINING OF THE STRING (HEX NUMBER)
NUM=$((8 - ${#SV_VERSION}))
ZEROS=$(printf "%0${NUM}d" 0)

printf "// AUTOGENERATED USING by new_version.sh\n
module build_number (output logic [31:0] build_number_b32);\n\n
    assign build_number_b32 = 32'h%s%s;\n\n
endmodule\n" $ZEROS $SV_VERSION > $DESTINATION/build_number.sv
